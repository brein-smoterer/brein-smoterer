@page "/characters/{CharacterName}";
@using Genshin_Site.Data;
@inject CharactersService characterService;
@inject WeaponService weaponService;
@inject ArtifactsService artifactService;


@{
    Character character = GetCharacter(CharacterName);
    <CharacterComponent Character=@character />
    <div>
        @foreach (var build in character.Builds)
        {
            <h4>Weapons</h4>
            @foreach(var weapon in build.Weapons)
            {
                Weapon test = GetWeapon(weapon);
                <img src="@test.Image" asp-append-version="true" maxwidth="180px" maxheight="180px" />
                <div>@test.Name</div>
            }
            <h4>Artifacts</h4>
            @foreach (var artifacts in build.ArtifactSets)
            {
                <ArtifactSetComponent ArtifactSet=@GetArtifactSet(artifacts)></ArtifactSetComponent>
            }
            <h4>Stats</h4>
            @foreach (var stats in build.Stats)
            {
                <div>@stats</div>
            }
        }
    </div>
}
@code {
    [Parameter]
    public string CharacterName { get; set; }

    public Character GetCharacter(string name)
    {
        Character needed = new Character(
            "",
            "",
            "",
            false,
            "",
            new List<Build>()
                {
                    new Build(
                        new List<string>
                        {
                            "",
                        },
                        new List<string> 
                        { 
                            "",
                        },
                        new List<string> 
                        { 
                            "",
                        }
                    )
                });
        List<Character> characters = characterService.Get();
        foreach (var character in characters)
        {
            if (character.CharacterName == name)
            {
                needed = character;
            }
        }
        return needed;
    }
    public Weapon GetWeapon(string name)
    {
        Weapon needed = new Weapon( "", "", "", "", "");
        List<Weapon> weapons = weaponService.Get();
        foreach (var weapon in weapons)
        {
            if( weapon.Name == name)
            {
                needed = weapon;
            }
        }
        return needed;
    }
    public ArtifactSet GetArtifactSet(string name)
    {
        ArtifactSet neededSet = new ArtifactSet("", "", new Artifacts[0], "", false);
        List<ArtifactSet> artifactSets = artifactService.GetSets();
        foreach (var artifactSet in artifactSets)
        {
            if (artifactSet.Name == name)
            {
                neededSet = artifactSet;
            }
        }
        return neededSet;
    }
}
